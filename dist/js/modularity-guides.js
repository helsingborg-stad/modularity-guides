/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./source/js/modularity-guides.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./source/js/Content/Todo.js":
/*!***********************************!*\
  !*** ./source/js/Content/Todo.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((function ($) {\n  var SELECTOR_TODOS_WRAPPER = '.js-modularity-guide-todos';\n  var SELECTOR_FORM = '.js-modularity-guide-todos__form';\n  var SELECTOR_MODAL_CLOSE_BUTTON = '.js-modularity-guide-todos__modal .c-modal__close';\n  var SELECTOR_MODAL_TRIGGER_BUTTON = '.js-modularity-guide-todos__modal-trigger';\n  var SELECTOR_FORM_NOTICE = '.js-modularity-guide-todos__notice';\n  var SELECTOR_TABLE = '.js-modularity-guide-todos__table';\n  var SELECTOR_INPUT_EMAIL = 'input[name=\"email\"]';\n  var NOTICE_LEVEL_CLASSNAMES = {\n    info: 'c-notice--info',\n    success: 'c-notice--success',\n    danger: 'c-notice--danger',\n    warning: 'c-notice--warning'\n  };\n  /**\n   * Utility to check if element is visible or not\n   * @param {Element} elem\n   * @returns {Boolean}\n   */\n\n  var isVisible = function isVisible(elem) {\n    return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n  };\n  /**\n   * Extract checklist html from todo table\n   * @param {Element} todoTable\n   * @returns {String} html with visible checklist items\n   */\n\n\n  function getCheckList(todoTable) {\n    var _checklist, _checklist$querySelec;\n\n    var checklist = todoTable.cloneNode(true);\n    checklist = document.body.appendChild(checklist); // Remove not visible rows\n\n    (_checklist = checklist) === null || _checklist === void 0 ? void 0 : (_checklist$querySelec = _checklist.querySelectorAll('tr')) === null || _checklist$querySelec === void 0 ? void 0 : _checklist$querySelec.forEach(function (row) {\n      if (isVisible(row)) {\n        return;\n      }\n\n      row.remove();\n    });\n    var checklistHTML = checklist.outerHTML;\n    checklist.remove();\n    return encodeURI(checklistHTML);\n  }\n  /**\n   * Send checklist email through wordpress on submit\n   * @param {SubmitEvent} e\n   */\n\n\n  function handleSubmit(e) {\n    var _currentForm$querySel;\n\n    e.preventDefault();\n    var currentForm = e.target;\n    var currentSection = currentForm.closest(SELECTOR_TODOS_WRAPPER);\n    var email = currentForm === null || currentForm === void 0 ? void 0 : (_currentForm$querySel = currentForm.querySelector(SELECTOR_INPUT_EMAIL)) === null || _currentForm$querySel === void 0 ? void 0 : _currentForm$querySel.value;\n    /**\n     * Display or hide form notice\n     * @param {String|Boolean} text notice content, set to false to hide notice\n     * @param {String} level  notice level - info, danger, warning, success\n     * @param {String} icon material icon name\n     * @returns\n     */\n\n    function setNotice(text) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n      var icon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var noticeElement = currentSection.querySelector(SELECTOR_FORM_NOTICE);\n      var noticeIconElement = noticeElement.querySelectorAll('c-icon');\n      var noticeClassList = noticeElement.classList;\n      var noticeLevelClassName = NOTICE_LEVEL_CLASSNAMES[level];\n\n      if (text === false) {\n        if (!noticeClassList.contains('u-display--none')) {\n          noticeClassList.add('u-display--none');\n        }\n\n        return;\n      }\n\n      if (noticeLevelClassName && !noticeClassList.contains(noticeLevelClassName)) {\n        _toConsumableArray(noticeClassList).filter(function (className) {\n          return Object.values(NOTICE_LEVEL_CLASSNAMES).includes(className);\n        }).forEach(function (className) {\n          noticeClassList.remove(className);\n        });\n\n        noticeClassList.add(noticeLevelClassName);\n      }\n\n      if (text.length > 0) {\n        var spanElements = noticeElement.querySelectorAll('span');\n        var textSpan = spanElements.length === 2 ? spanElements[1] : spanElements[0];\n        textSpan.innerHTML = text;\n\n        if (icon.length > 0 && noticeIconElement) {\n          noticeIconElement.innerHTML = icon;\n        }\n\n        noticeClassList.remove('u-display--none');\n      }\n    }\n\n    setNotice(false);\n    var todoTable = currentSection === null || currentSection === void 0 ? void 0 : currentSection.querySelector(SELECTOR_TABLE);\n\n    if (todoTable && email && ajaxurl) {\n      currentSection.classList.toggle('is-loading');\n      var checklist = getCheckList(todoTable);\n      var data = {\n        action: 'email_todo',\n        checklist: checklist,\n        email: email,\n        captcha: document.querySelector('.g-recaptcha-response').value\n      };\n      fetch(ajaxurl, {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: new URLSearchParams(data)\n      }).then(function (response) {\n        currentSection.classList.toggle('is-loading');\n        response.json().then(function (data) {\n          if (data) {\n            currentSection.classList.toggle('is-loading');\n            setNotice(guides.email_sent, 'success', 'report');\n            setTimeout(function () {\n              setNotice(false);\n              var closeModal = currentSection.querySelector(SELECTOR_MODAL_CLOSE_BUTTON);\n              closeModal.click();\n            }, 2000);\n          } else {\n            setNotice(guides.email_failed, 'danger', 'report');\n          }\n        });\n      }).catch(function (error) {\n        console.log(JSON.stringify(error));\n      });\n    }\n  }\n  /**\n   *\n   * @param {Element} todoSection\n   * @param {Number} index\n   */\n\n\n  function subscribeForm(todoSection, index) {\n    var _todoSection$querySel;\n\n    todoSection === null || todoSection === void 0 ? void 0 : (_todoSection$querySel = todoSection.querySelector(SELECTOR_FORM)) === null || _todoSection$querySel === void 0 ? void 0 : _todoSection$querySel.addEventListener('submit', handleSubmit);\n  }\n  /**\n   * Query ToDo sections & initialize great things\n   */\n\n\n  function init() {\n    var todoSections = document.querySelectorAll(SELECTOR_TODOS_WRAPPER);\n\n    if ((todoSections === null || todoSections === void 0 ? void 0 : todoSections.length) > 0) {\n      todoSections.forEach(function (todoSection, index) {\n        subscribeForm(todoSection, index);\n      });\n    }\n  }\n\n  window.addEventListener('DOMContentLoaded', init);\n})(jQuery));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/js/Content/Todo.js\n");

/***/ }),

/***/ "./source/js/Content/checkboxes.js":
/*!*****************************************!*\
  !*** ./source/js/Content/checkboxes.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ((function ($) {\n  function Checkboxes() {\n    this.handleEvents();\n    this.contentToggleEngine();\n  }\n\n  Checkboxes.prototype.handleEvents = function () {\n    $('input[type=\"checkbox\"][data-mod-guide-relation]').on('change', function (e) {\n      var relations = $(this).data('mod-guide-relation');\n      relations = relations.split(',');\n      $.each(relations, function (index, item) {\n        var $cb = $('input[type=\"checkbox\"][data-mod-guide-toggle-key=\"' + item + '\"]');\n        $cb.prop('checked', !$cb.prop('checked')).trigger('change');\n      });\n    });\n    $('[data-mod-guide-toggle-key]').on('change', function (e) {\n      this.contentToggleEngine();\n    }.bind(this));\n  };\n\n  Checkboxes.prototype.contentToggleEngine = function () {\n    // Get checked checkboxes\n    var checked = [];\n    var $checkboxes = $('[data-mod-guide-toggle-key]');\n    $checkboxes.each(function (index, element) {\n      if ($(element).prop('checked') !== true) {\n        return;\n      }\n\n      checked.push($(element).attr('data-mod-guide-toggle-key'));\n    }); // Display or hide content\n\n    $('[data-mod-guide-toggle-key-content]').each(function (index, element) {\n      var shouldShow = false;\n      var conditions = $(element).attr('data-mod-guide-toggle-key-content');\n      conditions = conditions.split(','); // Datermind if content should be shown or not\n\n      $.each(conditions, function (index, item) {\n        var and = item.match(/(^|\\+)([^\\+\\-]+)/g);\n        var andPattern = new RegExp('\\\\b(' + and.join('|').replace('+', '') + ')\\\\b', 'ig');\n        var andMatches = checked.join(',').match(andPattern);\n        var andIsMatching = andMatches !== null && andMatches.length === and.length;\n        var andnot = item.match(/\\-([^\\+\\-]+)/g);\n        var andnotIsMatching = true;\n\n        if (andnot !== null) {\n          var andnotPattern = new RegExp('\\\\b(' + andnot.join('|').replace('-', '') + ')\\\\b', 'ig');\n          var andnotMatches = checked.join(',').match(andnotPattern);\n          andnotIsMatching = !(andnotMatches !== null && andnotMatches.length > 0);\n        }\n\n        if (andIsMatching && andnotIsMatching) {\n          shouldShow = true;\n        }\n      }); // Hide or show\n\n      if (shouldShow === true) {\n        $(element).show();\n        return;\n      }\n\n      $(element).hide();\n      return;\n    });\n  };\n\n  return new Checkboxes();\n})(jQuery));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2UvanMvQ29udGVudC9jaGVja2JveGVzLmpzPzc3ZDciXSwibmFtZXMiOlsiJCIsIkNoZWNrYm94ZXMiLCJoYW5kbGVFdmVudHMiLCJjb250ZW50VG9nZ2xlRW5naW5lIiwicHJvdG90eXBlIiwib24iLCJlIiwicmVsYXRpb25zIiwiZGF0YSIsInNwbGl0IiwiZWFjaCIsImluZGV4IiwiaXRlbSIsIiRjYiIsInByb3AiLCJ0cmlnZ2VyIiwiYmluZCIsImNoZWNrZWQiLCIkY2hlY2tib3hlcyIsImVsZW1lbnQiLCJwdXNoIiwiYXR0ciIsInNob3VsZFNob3ciLCJjb25kaXRpb25zIiwiYW5kIiwibWF0Y2giLCJhbmRQYXR0ZXJuIiwiUmVnRXhwIiwiam9pbiIsInJlcGxhY2UiLCJhbmRNYXRjaGVzIiwiYW5kSXNNYXRjaGluZyIsImxlbmd0aCIsImFuZG5vdCIsImFuZG5vdElzTWF0Y2hpbmciLCJhbmRub3RQYXR0ZXJuIiwiYW5kbm90TWF0Y2hlcyIsInNob3ciLCJoaWRlIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLGdFQUFDLFVBQVVBLENBQVYsRUFBYTtBQUV6QixXQUFTQyxVQUFULEdBQXNCO0FBQ2xCLFNBQUtDLFlBQUw7QUFDQSxTQUFLQyxtQkFBTDtBQUNIOztBQUVERixZQUFVLENBQUNHLFNBQVgsQ0FBcUJGLFlBQXJCLEdBQW9DLFlBQVc7QUFFM0NGLEtBQUMsQ0FBQyxpREFBRCxDQUFELENBQXFESyxFQUFyRCxDQUF3RCxRQUF4RCxFQUFrRSxVQUFVQyxDQUFWLEVBQWE7QUFFM0UsVUFBSUMsU0FBUyxHQUFHUCxDQUFDLENBQUMsSUFBRCxDQUFELENBQVFRLElBQVIsQ0FBYSxvQkFBYixDQUFoQjtBQUNBRCxlQUFTLEdBQUdBLFNBQVMsQ0FBQ0UsS0FBVixDQUFnQixHQUFoQixDQUFaO0FBRUFULE9BQUMsQ0FBQ1UsSUFBRixDQUFPSCxTQUFQLEVBQWtCLFVBQVVJLEtBQVYsRUFBaUJDLElBQWpC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QW5CO0FBQ0g7O0FBRUQsWUFBSUQsYUFBYSxJQUFJRyxnQkFBckIsRUFBdUM7QUFDbkNaLG9CQUFVLEdBQUcsSUFBYjtBQUNIO0FBQ0osT0FqQkQsRUFOb0UsQ0F5QnBFOztBQUNBLFVBQUlBLFVBQVUsS0FBSyxJQUFuQixFQUF5QjtBQUNyQnRCLFNBQUMsQ0FBQ21CLE9BQUQsQ0FBRCxDQUFXa0IsSUFBWDtBQUNBO0FBQ0g7O0FBRURyQyxPQUFDLENBQUNtQixPQUFELENBQUQsQ0FBV21CLElBQVg7QUFDQTtBQUdILEtBbkNEO0FBb0NILEdBcEREOztBQXNEQSxTQUFPLElBQUlyQyxVQUFKLEVBQVA7QUFFSCxDQW5GYyxFQW1GWnNDLE1BbkZZLENBQWYiLCJmaWxlIjoiLi9zb3VyY2UvanMvQ29udGVudC9jaGVja2JveGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgkKSB7XG5cbiAgICBmdW5jdGlvbiBDaGVja2JveGVzKCkge1xuICAgICAgICB0aGlzLmhhbmRsZUV2ZW50cygpO1xuICAgICAgICB0aGlzLmNvbnRlbnRUb2dnbGVFbmdpbmUoKTtcbiAgICB9XG5cbiAgICBDaGVja2JveGVzLnByb3RvdHlwZS5oYW5kbGVFdmVudHMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICAkKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl1bZGF0YS1tb2QtZ3VpZGUtcmVsYXRpb25dJykub24oJ2NoYW5nZScsIGZ1bmN0aW9uIChlKSB7XG5cbiAgICAgICAgICAgIGxldCByZWxhdGlvbnMgPSAkKHRoaXMpLmRhdGEoJ21vZC1ndWlkZS1yZWxhdGlvbicpO1xuICAgICAgICAgICAgcmVsYXRpb25zID0gcmVsYXRpb25zLnNwbGl0KCcsJyk7XG5cbiAgICAgICAgICAgICQuZWFjaChyZWxhdGlvbnMsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xuICAgICAgICAgICAgICAgIGxldCAkY2IgPSAkKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl1bZGF0YS1tb2QtZ3VpZGUtdG9nZ2xlLWtleT1cIicgKyBpdGVtICsgJ1wiXScpO1xuICAgICAgICAgICAgICAgICRjYi5wcm9wKCdjaGVja2VkJywgISRjYi5wcm9wKCdjaGVja2VkJykpLnRyaWdnZXIoJ2NoYW5nZScpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoJ1tkYXRhLW1vZC1ndWlkZS10b2dnbGUta2V5XScpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdGhpcy5jb250ZW50VG9nZ2xlRW5naW5lKCk7XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG5cblxuICAgIH07XG5cbiAgICBDaGVja2JveGVzLnByb3RvdHlwZS5jb250ZW50VG9nZ2xlRW5naW5lID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIEdldCBjaGVja2VkIGNoZWNrYm94ZXNcbiAgICAgICAgbGV0IGNoZWNrZWQgPSBbXTtcbiAgICAgICAgbGV0ICRjaGVja2JveGVzID0gJCgnW2RhdGEtbW9kLWd1aWRlLXRvZ2dsZS1rZXldJyk7XG5cbiAgICAgICAgJGNoZWNrYm94ZXMuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgICAgIGlmICgkKGVsZW1lbnQpLnByb3AoJ2NoZWNrZWQnKSAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2hlY2tlZC5wdXNoKCQoZWxlbWVudCkuYXR0cignZGF0YS1tb2QtZ3VpZGUtdG9nZ2xlLWtleScpKTtcblxuXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIERpc3BsYXkgb3IgaGlkZSBjb250ZW50XG4gICAgICAgICQoJ1tkYXRhLW1vZC1ndWlkZS10b2dnbGUta2V5LWNvbnRlbnRdJykuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgICAgIGxldCBzaG91bGRTaG93ID0gZmFsc2U7XG4gICAgICAgICAgICBsZXQgY29uZGl0aW9ucyA9ICQoZWxlbWVudCkuYXR0cignZGF0YS1tb2QtZ3VpZGUtdG9nZ2xlLWtleS1jb250ZW50Jyk7XG4gICAgICAgICAgICBjb25kaXRpb25zID0gY29uZGl0aW9ucy5zcGxpdCgnLCcpO1xuXG4gICAgICAgICAgICAvLyBEYXRlcm1pbmQgaWYgY29udGVudCBzaG91bGQgYmUgc2hvd24gb3Igbm90XG4gICAgICAgICAgICAkLmVhY2goY29uZGl0aW9ucywgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG4gICAgICAgICAgICAgICAgbGV0IGFuZCA9IGl0ZW0ubWF0Y2goLyhefFxcKykoW15cXCtcXC1dKykvZyk7XG4gICAgICAgICAgICAgICAgbGV0IGFuZFBhdHRlcm4gPSBuZXcgUmVnRXhwKCdcXFxcYignICsgYW5kLmpvaW4oJ3wnKS5yZXBsYWNlKCcrJywgJycpICsgJylcXFxcYicsICdpZycpO1xuICAgICAgICAgICAgICAgIGxldCBhbmRNYXRjaGVzID0gY2hlY2tlZC5qb2luKCcsJykubWF0Y2goYW5kUGF0dGVybik7XG4gICAgICAgICAgICAgICAgbGV0IGFuZElzTWF0Y2hpbmcgPSBhbmRNYXRjaGVzICE9PSBudWxsICYmIGFuZE1hdGNoZXMubGVuZ3RoID09PSBhbmQubGVuZ3RoO1xuXG4gICAgICAgICAgICAgICAgbGV0IGFuZG5vdCA9IGl0ZW0ubWF0Y2goL1xcLShbXlxcK1xcLV0rKS9nKTtcbiAgICAgICAgICAgICAgICBsZXQgYW5kbm90SXNNYXRjaGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgaWYgKGFuZG5vdCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgYW5kbm90UGF0dGVybiA9IG5ldyBSZWdFeHAoJ1xcXFxiKCcgKyBhbmRub3Quam9pbignfCcpLnJlcGxhY2UoJy0nLCAnJykgKyAnKVxcXFxiJywgJ2lnJyk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBhbmRub3RNYXRjaGVzID0gY2hlY2tlZC5qb2luKCcsJykubWF0Y2goYW5kbm90UGF0dGVybik7XG4gICAgICAgICAgICAgICAgICAgIGFuZG5vdElzTWF0Y2hpbmcgPSAhKGFuZG5vdE1hdGNoZXMgIT09IG51bGwgJiYgYW5kbm90TWF0Y2hlcy5sZW5ndGggPiAwKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoYW5kSXNNYXRjaGluZyAmJiBhbmRub3RJc01hdGNoaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHNob3VsZFNob3cgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBIaWRlIG9yIHNob3dcbiAgICAgICAgICAgIGlmIChzaG91bGRTaG93ID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgJChlbGVtZW50KS5zaG93KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkKGVsZW1lbnQpLmhpZGUoKTtcbiAgICAgICAgICAgIHJldHVybjtcblxuXG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IENoZWNrYm94ZXMoKTtcblxufSkoalF1ZXJ5KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/js/Content/checkboxes.js\n");

/***/ }),

/***/ "./source/js/modularity-guides.js":
/*!****************************************!*\
  !*** ./source/js/modularity-guides.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Content_Todo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Content/Todo.js */ \"./source/js/Content/Todo.js\");\n/* harmony import */ var _Content_checkboxes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Content/checkboxes.js */ \"./source/js/Content/checkboxes.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n // Required selectors\n\nvar SELECTOR_MODULARITY_GUIDE = '.js-modularity-guide';\nvar SELECTOR_SECTION = '.js-modularity-guide__section';\nvar SELECTOR_NEXT = '.js-modularity-guide__next';\nvar SELECTOR_PREV = '.js-modularity-guide__prev';\nvar SELECTOR_ACCORDION_TOGGLE = '[js-expand-button]'; // Required data-attributes\n\nvar ATTRIBUTE_STEP = 'data-guide-step';\n/**\n * Click handler for Next & Prev buttons,\n * will traverse up to find current, previous and the next step to simulate accordion click\n * @param {*} e event\n */\n\nfunction handlePrevNextClick(e) {\n  var _currentSection$getAt;\n\n  e.preventDefault();\n  console.log(\"next prev\");\n  var prevNextButtonElement = e.target;\n  var isNext = e.target.classList.contains(SELECTOR_NEXT.substring(1)); // Traverse DOM upwards\n\n  var currentGuide = prevNextButtonElement === null || prevNextButtonElement === void 0 ? void 0 : prevNextButtonElement.closest(SELECTOR_MODULARITY_GUIDE);\n  var currentSection = prevNextButtonElement === null || prevNextButtonElement === void 0 ? void 0 : prevNextButtonElement.closest(SELECTOR_SECTION);\n  var currentStep = parseInt((_currentSection$getAt = currentSection === null || currentSection === void 0 ? void 0 : currentSection.getAttribute(ATTRIBUTE_STEP)) !== null && _currentSection$getAt !== void 0 ? _currentSection$getAt : '-1');\n\n  if (currentStep > 0) {\n    var targetStep = isNext ? currentStep + 1 : currentStep - 1;\n    var targetSection = currentGuide === null || currentGuide === void 0 ? void 0 : currentGuide.querySelector(\"[\".concat(ATTRIBUTE_STEP, \"=\\\"\").concat(targetStep, \"\\\"]\"));\n    var targetToggle = targetSection === null || targetSection === void 0 ? void 0 : targetSection.querySelector(SELECTOR_ACCORDION_TOGGLE);\n\n    if (targetToggle) {\n      targetToggle.click();\n    }\n  }\n}\n\n;\n/**\n * Subscribe prev/next button click event\n * @param {Element} wrapperElement\n */\n\nfunction subscribePrevNextButtons(wrapperElement) {\n  var buttons = [].concat(_toConsumableArray(wrapperElement.querySelectorAll(\"\".concat(SELECTOR_SECTION, \" \").concat(SELECTOR_NEXT))), _toConsumableArray(wrapperElement.querySelectorAll(\"\".concat(SELECTOR_SECTION, \" \").concat(SELECTOR_PREV))));\n\n  if (buttons.length > 0) {\n    buttons.forEach(function (buttonElement) {\n      buttonElement.addEventListener('click', handlePrevNextClick);\n    });\n  }\n}\n/**\n * Query guide modules & initialize stuff\n */\n\n\nfunction init() {\n  var guideModules = document.querySelectorAll(SELECTOR_MODULARITY_GUIDE);\n\n  if (guideModules && guideModules.length > 0) {\n    guideModules.forEach(subscribePrevNextButtons);\n  }\n}\n\nwindow.addEventListener('DOMContentLoaded', init);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2UvanMvbW9kdWxhcml0eS1ndWlkZXMuanM/NDNhNyJdLCJuYW1lcyI6WyJTRUxFQ1RPUl9NT0RVTEFSSVRZX0dVSURFIiwiU0VMRUNUT1JfU0VDVElPTiIsIlNFTEVDVE9SX05FWFQiLCJTRUxFQ1RPUl9QUkVWIiwiU0VMRUNUT1JfQUNDT1JESU9OX1RPR0dMRSIsIkFUVFJJQlVURV9TVEVQIiwiaGFuZGxlUHJldk5leHRDbGljayIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImNvbnNvbGUiLCJsb2ciLCJwcmV2TmV4dEJ1dHRvbkVsZW1lbnQiLCJ0YXJnZXQiLCJpc05leHQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInN1YnN0cmluZyIsImN1cnJlbnRHdWlkZSIsImNsb3Nlc3QiLCJjdXJyZW50U2VjdGlvbiIsImN1cnJlbnRTdGVwIiwicGFyc2VJbnQiLCJnZXRBdHRyaWJ1dGUiLCJ0YXJnZXRTdGVwIiwidGFyZ2V0U2VjdGlvbiIsInF1ZXJ5U2VsZWN0b3IiLCJ0YXJnZXRUb2dnbGUiLCJjbGljayIsInN1YnNjcmliZVByZXZOZXh0QnV0dG9ucyIsIndyYXBwZXJFbGVtZW50IiwiYnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJmb3JFYWNoIiwiYnV0dG9uRWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbml0IiwiZ3VpZGVNb2R1bGVzIiwiZG9jdW1lbnQiLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0NBR0E7O0FBQ0EsSUFBTUEseUJBQXlCLEdBQUcsc0JBQWxDO0FBQ0EsSUFBTUMsZ0JBQWdCLEdBQUcsK0JBQXpCO0FBQ0EsSUFBTUMsYUFBYSxHQUFHLDRCQUF0QjtBQUNBLElBQU1DLGFBQWEsR0FBRyw0QkFBdEI7QUFDQSxJQUFNQyx5QkFBeUIsR0FBRyxvQkFBbEMsQyxDQUVBOztBQUNBLElBQU1DLGNBQWMsR0FBRyxpQkFBdkI7QUFFQTs7Ozs7O0FBS0EsU0FBU0MsbUJBQVQsQ0FBNkJDLENBQTdCLEVBQWdDO0FBQUE7O0FBQzVCQSxHQUFDLENBQUNDLGNBQUY7QUFFQUMsU0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWjtBQUVBLE1BQU1DLHFCQUFxQixHQUFHSixDQUFDLENBQUNLLE1BQWhDO0FBQ0EsTUFBTUMsTUFBTSxHQUFHTixDQUFDLENBQUNLLE1BQUYsQ0FBU0UsU0FBVCxDQUFtQkMsUUFBbkIsQ0FBNEJiLGFBQWEsQ0FBQ2MsU0FBZCxDQUF3QixDQUF4QixDQUE1QixDQUFmLENBTjRCLENBUTVCOztBQUNBLE1BQU1DLFlBQVksR0FBR04scUJBQUgsYUFBR0EscUJBQUgsdUJBQUdBLHFCQUFxQixDQUFFTyxPQUF2QixDQUErQmxCLHlCQUEvQixDQUFyQjtBQUNBLE1BQU1tQixjQUFjLEdBQUdSLHFCQUFILGFBQUdBLHFCQUFILHVCQUFHQSxxQkFBcUIsQ0FBRU8sT0FBdkIsQ0FBK0JqQixnQkFBL0IsQ0FBdkI7QUFDQSxNQUFNbUIsV0FBVyxHQUFHQyxRQUFRLDBCQUFDRixjQUFELGFBQUNBLGNBQUQsdUJBQUNBLGNBQWMsQ0FBRUcsWUFBaEIsQ0FBNkJqQixjQUE3QixDQUFELHlFQUFpRCxJQUFqRCxDQUE1Qjs7QUFFQSxNQUFJZSxXQUFXLEdBQUcsQ0FBbEIsRUFBcUI7QUFDakIsUUFBTUcsVUFBVSxHQUFHVixNQUFNLEdBQUdPLFdBQVcsR0FBRyxDQUFqQixHQUFxQkEsV0FBVyxHQUFHLENBQTVEO0FBQ0EsUUFBTUksYUFBYSxHQUFHUCxZQUFILGFBQUdBLFlBQUgsdUJBQUdBLFlBQVksQ0FBRVEsYUFBZCxZQUFnQ3BCLGNBQWhDLGdCQUFtRGtCLFVBQW5ELFNBQXRCO0FBQ0EsUUFBTUcsWUFBWSxHQUFHRixhQUFILGFBQUdBLGFBQUgsdUJBQUdBLGFBQWEsQ0FBRUMsYUFBZixDQUE2QnJCLHlCQUE3QixDQUFyQjs7QUFFQSxRQUFJc0IsWUFBSixFQUFrQjtBQUNkQSxrQkFBWSxDQUFDQyxLQUFiO0FBQ0g7QUFDSjtBQUNKOztBQUFBO0FBRUQ7Ozs7O0FBSUEsU0FBU0Msd0JBQVQsQ0FBa0NDLGNBQWxDLEVBQWtEO0FBQzlDLE1BQU1DLE9BQU8sZ0NBQ05ELGNBQWMsQ0FBQ0UsZ0JBQWYsV0FBbUM5QixnQkFBbkMsY0FBdURDLGFBQXZELEVBRE0sc0JBRU4yQixjQUFjLENBQUNFLGdCQUFmLFdBQW1DOUIsZ0JBQW5DLGNBQXVERSxhQUF2RCxFQUZNLEVBQWI7O0FBS0EsTUFBSTJCLE9BQU8sQ0FBQ0UsTUFBUixHQUFpQixDQUFyQixFQUF3QjtBQUNwQkYsV0FBTyxDQUFDRyxPQUFSLENBQWdCLFVBQUFDLGFBQWEsRUFBSTtBQUM3QkEsbUJBQWEsQ0FBQ0MsZ0JBQWQsQ0FBK0IsT0FBL0IsRUFBd0M3QixtQkFBeEM7QUFDSCxLQUZEO0FBR0g7QUFDSjtBQUVEOzs7OztBQUdBLFNBQVM4QixJQUFULEdBQWdCO0FBQ1osTUFBTUMsWUFBWSxHQUFHQyxRQUFRLENBQUNQLGdCQUFULENBQTBCL0IseUJBQTFCLENBQXJCOztBQUVBLE1BQUlxQyxZQUFZLElBQUlBLFlBQVksQ0FBQ0wsTUFBYixHQUFzQixDQUExQyxFQUE2QztBQUN6Q0ssZ0JBQVksQ0FBQ0osT0FBYixDQUFxQkwsd0JBQXJCO0FBQ0g7QUFDSjs7QUFFRFcsTUFBTSxDQUFDSixnQkFBUCxDQUF3QixrQkFBeEIsRUFBNENDLElBQTVDIiwiZmlsZSI6Ii4vc291cmNlL2pzL21vZHVsYXJpdHktZ3VpZGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL0NvbnRlbnQvVG9kby5qcyc7XG5pbXBvcnQgJy4vQ29udGVudC9jaGVja2JveGVzLmpzJztcblxuLy8gUmVxdWlyZWQgc2VsZWN0b3JzXG5jb25zdCBTRUxFQ1RPUl9NT0RVTEFSSVRZX0dVSURFID0gJy5qcy1tb2R1bGFyaXR5LWd1aWRlJztcbmNvbnN0IFNFTEVDVE9SX1NFQ1RJT04gPSAnLmpzLW1vZHVsYXJpdHktZ3VpZGVfX3NlY3Rpb24nO1xuY29uc3QgU0VMRUNUT1JfTkVYVCA9ICcuanMtbW9kdWxhcml0eS1ndWlkZV9fbmV4dCc7XG5jb25zdCBTRUxFQ1RPUl9QUkVWID0gJy5qcy1tb2R1bGFyaXR5LWd1aWRlX19wcmV2JztcbmNvbnN0IFNFTEVDVE9SX0FDQ09SRElPTl9UT0dHTEUgPSAnW2pzLWV4cGFuZC1idXR0b25dJztcblxuLy8gUmVxdWlyZWQgZGF0YS1hdHRyaWJ1dGVzXG5jb25zdCBBVFRSSUJVVEVfU1RFUCA9ICdkYXRhLWd1aWRlLXN0ZXAnO1xuXG4vKipcbiAqIENsaWNrIGhhbmRsZXIgZm9yIE5leHQgJiBQcmV2IGJ1dHRvbnMsXG4gKiB3aWxsIHRyYXZlcnNlIHVwIHRvIGZpbmQgY3VycmVudCwgcHJldmlvdXMgYW5kIHRoZSBuZXh0IHN0ZXAgdG8gc2ltdWxhdGUgYWNjb3JkaW9uIGNsaWNrXG4gKiBAcGFyYW0geyp9IGUgZXZlbnRcbiAqL1xuZnVuY3Rpb24gaGFuZGxlUHJldk5leHRDbGljayhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc29sZS5sb2coXCJuZXh0IHByZXZcIik7IFxuXG4gICAgY29uc3QgcHJldk5leHRCdXR0b25FbGVtZW50ID0gZS50YXJnZXQ7XG4gICAgY29uc3QgaXNOZXh0ID0gZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFNFTEVDVE9SX05FWFQuc3Vic3RyaW5nKDEpKTtcblxuICAgIC8vIFRyYXZlcnNlIERPTSB1cHdhcmRzXG4gICAgY29uc3QgY3VycmVudEd1aWRlID0gcHJldk5leHRCdXR0b25FbGVtZW50Py5jbG9zZXN0KFNFTEVDVE9SX01PRFVMQVJJVFlfR1VJREUpO1xuICAgIGNvbnN0IGN1cnJlbnRTZWN0aW9uID0gcHJldk5leHRCdXR0b25FbGVtZW50Py5jbG9zZXN0KFNFTEVDVE9SX1NFQ1RJT04pO1xuICAgIGNvbnN0IGN1cnJlbnRTdGVwID0gcGFyc2VJbnQoY3VycmVudFNlY3Rpb24/LmdldEF0dHJpYnV0ZShBVFRSSUJVVEVfU1RFUCkgPz8gJy0xJyk7XG5cbiAgICBpZiAoY3VycmVudFN0ZXAgPiAwKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldFN0ZXAgPSBpc05leHQgPyBjdXJyZW50U3RlcCArIDEgOiBjdXJyZW50U3RlcCAtIDE7XG4gICAgICAgIGNvbnN0IHRhcmdldFNlY3Rpb24gPSBjdXJyZW50R3VpZGU/LnF1ZXJ5U2VsZWN0b3IoYFske0FUVFJJQlVURV9TVEVQfT1cIiR7dGFyZ2V0U3RlcH1cIl1gKTtcbiAgICAgICAgY29uc3QgdGFyZ2V0VG9nZ2xlID0gdGFyZ2V0U2VjdGlvbj8ucXVlcnlTZWxlY3RvcihTRUxFQ1RPUl9BQ0NPUkRJT05fVE9HR0xFKTtcblxuICAgICAgICBpZiAodGFyZ2V0VG9nZ2xlKSB7XG4gICAgICAgICAgICB0YXJnZXRUb2dnbGUuY2xpY2soKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbi8qKlxuICogU3Vic2NyaWJlIHByZXYvbmV4dCBidXR0b24gY2xpY2sgZXZlbnRcbiAqIEBwYXJhbSB7RWxlbWVudH0gd3JhcHBlckVsZW1lbnRcbiAqL1xuZnVuY3Rpb24gc3Vic2NyaWJlUHJldk5leHRCdXR0b25zKHdyYXBwZXJFbGVtZW50KSB7XG4gICAgY29uc3QgYnV0dG9ucyA9IFtcbiAgICAgICAgLi4ud3JhcHBlckVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChgJHtTRUxFQ1RPUl9TRUNUSU9OfSAke1NFTEVDVE9SX05FWFR9YCksXG4gICAgICAgIC4uLndyYXBwZXJFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCR7U0VMRUNUT1JfU0VDVElPTn0gJHtTRUxFQ1RPUl9QUkVWfWApLFxuICAgIF07XG5cbiAgICBpZiAoYnV0dG9ucy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGJ1dHRvbnMuZm9yRWFjaChidXR0b25FbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGJ1dHRvbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVQcmV2TmV4dENsaWNrKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFF1ZXJ5IGd1aWRlIG1vZHVsZXMgJiBpbml0aWFsaXplIHN0dWZmXG4gKi9cbmZ1bmN0aW9uIGluaXQoKSB7XG4gICAgY29uc3QgZ3VpZGVNb2R1bGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChTRUxFQ1RPUl9NT0RVTEFSSVRZX0dVSURFKTtcblxuICAgIGlmIChndWlkZU1vZHVsZXMgJiYgZ3VpZGVNb2R1bGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZ3VpZGVNb2R1bGVzLmZvckVhY2goc3Vic2NyaWJlUHJldk5leHRCdXR0b25zKTtcbiAgICB9XG59XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgaW5pdCk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/js/modularity-guides.js\n");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtRQUFBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOzs7UUFHQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMENBQTBDLGdDQUFnQztRQUMxRTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLHdEQUF3RCxrQkFBa0I7UUFDMUU7UUFDQSxpREFBaUQsY0FBYztRQUMvRDs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0EseUNBQXlDLGlDQUFpQztRQUMxRSxnSEFBZ0gsbUJBQW1CLEVBQUU7UUFDckk7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwyQkFBMkIsMEJBQTBCLEVBQUU7UUFDdkQsaUNBQWlDLGVBQWU7UUFDaEQ7UUFDQTtRQUNBOztRQUVBO1FBQ0Esc0RBQXNELCtEQUErRDs7UUFFckg7UUFDQTs7O1FBR0E7UUFDQSIsImZpbGUiOiJqcy9tb2R1bGFyaXR5LWd1aWRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc291cmNlL2pzL21vZHVsYXJpdHktZ3VpZGVzLmpzXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==